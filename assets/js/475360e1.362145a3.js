"use strict";(self.webpackChunkzell_chaos=self.webpackChunkzell_chaos||[]).push([[9933],{30342:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var n=a(85893),i=a(11151);const o={layout:"posts",title:"Continuing SST Partitioning toggle",date:new Date("2023-05-19T00:00:00.000Z"),categories:["chaos_experiment","configuration"],tags:["availability","data"],authors:"zell"},s="Chaos Day Summary",r={permalink:"/zeebe-chaos/2023/05/19/Continuing-SST-Partitioning-toggle",editUrl:"https://github.com/zeebe-io/zeebe-chaos/blob/master/chaos-days/blog/2023-05-19-Continuing-SST-Partitioning-toggle/index.md",source:"@site/blog/2023-05-19-Continuing-SST-Partitioning-toggle/index.md",title:"Continuing SST Partitioning toggle",description:"Today we want to continue with the experiment from last Chaos day, but this time",date:"2023-05-19T00:00:00.000Z",formattedDate:"May 19, 2023",tags:[{label:"availability",permalink:"/zeebe-chaos/tags/availability"},{label:"data",permalink:"/zeebe-chaos/tags/data"}],readingTime:8.105,hasTruncateMarker:!0,authors:[{name:"Christopher Kujawa",title:"Chaos Engineer @ Zeebe",url:"https://github.com/zelldon",imageURL:"https://github.com/zelldon.png",key:"zell"}],frontMatter:{layout:"posts",title:"Continuing SST Partitioning toggle",date:"2023-05-19T00:00:00.000Z",categories:["chaos_experiment","configuration"],tags:["availability","data"],authors:"zell"},unlisted:!1,prevItem:{title:"Using Large Multi-Instance",permalink:"/zeebe-chaos/2023/06/02/Using-Large-Multi-Instance"},nextItem:{title:"SST Partitioning toggle",permalink:"/zeebe-chaos/2023/05/15/SST-Partitioning-toggle"}},l={authorsImageUrls:[void 0]},c=[];function g(t){const e={a:"a",p:"p",strong:"strong",...(0,i.a)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:["Today we want to continue with the experiment from ",(0,n.jsx)(e.a,{href:"/zeebe-chaos/2023/05/15/SST-Partitioning-toggle",children:"last Chaos day"}),", but this time\nwith a bit more load. This should make sure that we trigger the compaction of RocksDB and cause the SST partitioning to happen, for real."]}),"\n",(0,n.jsx)(e.p,{children:"The reasons stay the same we want to find out whether it would be possible to enable and disable the flag/configuration without issues."}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"TL;DR;"})," Today's, experiments succeeded ","\ud83d\ude80",". We were able to show that even with a higher number of process instances (bigger state) we can easily disable and enable the SST partitioning flag without issues. I also got a confirmation from a RocksDb contributor that our observations are correct, and that we can easily toggle this feature without issues."]})]})}function h(t={}){const{wrapper:e}={...(0,i.a)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(g,{...t})}):g(t)}},11151:(t,e,a)=>{a.d(e,{Z:()=>r,a:()=>s});var n=a(67294);const i={},o=n.createContext(i);function s(t){const e=n.useContext(o);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),n.createElement(o.Provider,{value:e},t.children)}}}]);